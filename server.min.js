var http=require("http"),https=require("https"),fs=require("fs"),express=require("express"),handlebars=require("handlebars"),config=require("./config.js"),Client=require("./models/client.js"),server=express(),serverInst=http.createServer(server),io=require("socket.io").listen(serverInst),Server={clients:[],init:function(){},createClient:function(e){this.clients.push(e);console.log("-- LOG: The connected clients are: "+this.clients.length)},destroyClient:function(e){var t=this;this.clients.forEach(function(n,r){if(e===n._key){t.clients.splice(r,1);console.log("-- LOG: The connected clients are: "+t.clients.length);return}console.log("-- LOG: Couldn't find client with id: "+e)})},broadcast:function(e,t,n){n=n||!1;e=e||{};t=t||this.clients[0]||!1;if(t){if(n){var r=e.client||e.all;t.socket.emit("update stats",{results:r})}t.socket.broadcast.emit("update stats",{results:e.all})}},render:function(e,t,n){var r=this.loadTemplate(e);template=handlebars.compile(r),commits=[],numCommits=t.length,i=0,that=this;for(i;i<numCommits;i++)commits.push(template(t[i]));n?this.sendCommitsToClient({commits:commits.reverse()},n):this.clients.forEach(function(e,t){that.sendCommitsToClient({commits:commits.reverse()},e)})},loadTemplate:function(e){var t=fs.readFileSync("./view/"+e,"utf8",function(e,t){if(e)throw e;return t});return t}};serverInst.listen(config.serverPort);var publicDir=__dirname+"public",assetsDir=publicDir+"/assets";server.use("/assets",express.static(assetsDir));server.get("/*",function(e,t){var n=Server.loadTemplate("layout.tmpl"),r=handlebars.compile(n),i=r({basePath:config.basePath});t.send(i)});io.sockets.on("connection",function(e){console.log("-- LOG: New client connection - "+e.id);Server.createClient(new Client({socket:e}));e.on("disconnect",function(){Server.destroyClient(e.id)})});